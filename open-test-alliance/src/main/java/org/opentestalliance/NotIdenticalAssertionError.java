/*
 * Copyright 2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentestalliance;

/**
 * @author Sam Brannen
 * @since 1.0
 */
public class NotIdenticalAssertionError extends TestAssertionError {

	private static final long serialVersionUID = 3356207071588173012L;

	public NotIdenticalAssertionError(Object obj) {
		this(obj, null);
	}

	public NotIdenticalAssertionError(Object obj, String message) {
		super(buildMessage(obj, message));
	}

	protected static String buildMessage(Object obj, String message) {
		String actual = (obj == null ? "null" : String.format("%s (%s)", toString(obj), obj));
		return TestAssertionError.buildMessage("different objects", actual, message);
	}

	private static String toString(Object obj) {
		if (obj == null) {
			return "null";
		}
		return obj.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(obj));
	}

}
